# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: infer_server.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='infer_server.proto',
  package='detectron.infer',
  syntax='proto3',
  serialized_pb=_b('\n\x12infer_server.proto\x12\x0f\x64\x65tectron.infer\"\x1d\n\x05Point\x12\t\n\x01x\x18\x01 \x01(\x05\x12\t\n\x01y\x18\x02 \x01(\x05\"\xed\x01\n\x07\x43ontext\x12\x39\n\tuser_data\x18\x01 \x03(\x0b\x32&.detectron.infer.Context.UserDataEntry\x12\x41\n\roption_params\x18\x02 \x03(\x0b\x32*.detectron.infer.Context.OptionParamsEntry\x1a/\n\rUserDataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x33\n\x11OptionParamsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"3\n\x0e\x43lassification\x12\r\n\x05\x63lass\x18\x01 \x01(\t\x12\x12\n\nconfidence\x18\x02 \x01(\x02\"*\n\x0bRequestData\x12\x0e\n\x06\x62\x61se64\x18\x01 \x01(\t\x12\x0b\n\x03raw\x18\x02 \x01(\x0c\"f\n\rDetectRequest\x12)\n\x07\x63ontext\x18\x01 \x01(\x0b\x32\x18.detectron.infer.Context\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.detectron.infer.RequestData\"r\n\x04\x42\x42ox\x12(\n\x08left_top\x18\x01 \x01(\x0b\x32\x16.detectron.infer.Point\x12,\n\x0cright_bottom\x18\x02 \x01(\x0b\x32\x16.detectron.infer.Point\x12\x12\n\nconfidence\x18\x05 \x01(\x02\"A\n\x04Mask\x12%\n\x05segms\x18\x01 \x03(\x0b\x32\x16.detectron.infer.Point\x12\x12\n\nconfidence\x18\x02 \x01(\x02\"[\n\tKeyPoints\x12&\n\x06points\x18\x01 \x03(\x0b\x32\x16.detectron.infer.Point\x12\x12\n\nvisibility\x18\x02 \x03(\x08\x12\x12\n\nconfidence\x18\x03 \x01(\x02\"\xb2\x01\n\tDetection\x12#\n\x04\x62\x62ox\x18\x01 \x01(\x0b\x32\x15.detectron.infer.BBox\x12#\n\x04mask\x18\x02 \x01(\x0b\x32\x15.detectron.infer.Mask\x12-\n\tkeypoints\x18\x03 \x01(\x0b\x32\x1a.detectron.infer.KeyPoints\x12,\n\x03\x63ls\x18\x04 \x03(\x0b\x32\x1f.detectron.infer.Classification\"\xc5\x01\n\x0e\x44\x65tectResponse\x12)\n\x07\x63ontext\x18\x01 \x01(\x0b\x32\x18.detectron.infer.Context\x12\x10\n\x06\x65rr_no\x18\x02 \x01(\x05H\x00\x12\x11\n\x07\x65rr_msg\x18\x03 \x01(\tH\x01\x12\x12\n\nrequest_id\x18\x04 \x01(\t\x12.\n\ndetections\x18\x05 \x03(\x0b\x32\x1a.detectron.infer.DetectionB\x0e\n\x0c\x65rr_no_oneofB\x0f\n\rerr_msg_oneof2_\n\x10\x44\x65tectronService\x12K\n\x06\x44\x65tect\x12\x1e.detectron.infer.DetectRequest\x1a\x1f.detectron.infer.DetectResponse\"\x00\x62\x06proto3')
)




_POINT = _descriptor.Descriptor(
  name='Point',
  full_name='detectron.infer.Point',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='x', full_name='detectron.infer.Point.x', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='y', full_name='detectron.infer.Point.y', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=39,
  serialized_end=68,
)


_CONTEXT_USERDATAENTRY = _descriptor.Descriptor(
  name='UserDataEntry',
  full_name='detectron.infer.Context.UserDataEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='detectron.infer.Context.UserDataEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='detectron.infer.Context.UserDataEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=208,
  serialized_end=255,
)

_CONTEXT_OPTIONPARAMSENTRY = _descriptor.Descriptor(
  name='OptionParamsEntry',
  full_name='detectron.infer.Context.OptionParamsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='detectron.infer.Context.OptionParamsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='detectron.infer.Context.OptionParamsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=257,
  serialized_end=308,
)

_CONTEXT = _descriptor.Descriptor(
  name='Context',
  full_name='detectron.infer.Context',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_data', full_name='detectron.infer.Context.user_data', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='option_params', full_name='detectron.infer.Context.option_params', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_CONTEXT_USERDATAENTRY, _CONTEXT_OPTIONPARAMSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=71,
  serialized_end=308,
)


_CLASSIFICATION = _descriptor.Descriptor(
  name='Classification',
  full_name='detectron.infer.Classification',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='class', full_name='detectron.infer.Classification.class', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='detectron.infer.Classification.confidence', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=310,
  serialized_end=361,
)


_REQUESTDATA = _descriptor.Descriptor(
  name='RequestData',
  full_name='detectron.infer.RequestData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='base64', full_name='detectron.infer.RequestData.base64', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='raw', full_name='detectron.infer.RequestData.raw', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=363,
  serialized_end=405,
)


_DETECTREQUEST = _descriptor.Descriptor(
  name='DetectRequest',
  full_name='detectron.infer.DetectRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='context', full_name='detectron.infer.DetectRequest.context', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='detectron.infer.DetectRequest.data', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=407,
  serialized_end=509,
)


_BBOX = _descriptor.Descriptor(
  name='BBox',
  full_name='detectron.infer.BBox',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='left_top', full_name='detectron.infer.BBox.left_top', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='right_bottom', full_name='detectron.infer.BBox.right_bottom', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='detectron.infer.BBox.confidence', index=2,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=511,
  serialized_end=625,
)


_MASK = _descriptor.Descriptor(
  name='Mask',
  full_name='detectron.infer.Mask',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='segms', full_name='detectron.infer.Mask.segms', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='detectron.infer.Mask.confidence', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=627,
  serialized_end=692,
)


_KEYPOINTS = _descriptor.Descriptor(
  name='KeyPoints',
  full_name='detectron.infer.KeyPoints',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='points', full_name='detectron.infer.KeyPoints.points', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='visibility', full_name='detectron.infer.KeyPoints.visibility', index=1,
      number=2, type=8, cpp_type=7, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='detectron.infer.KeyPoints.confidence', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=694,
  serialized_end=785,
)


_DETECTION = _descriptor.Descriptor(
  name='Detection',
  full_name='detectron.infer.Detection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bbox', full_name='detectron.infer.Detection.bbox', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mask', full_name='detectron.infer.Detection.mask', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='keypoints', full_name='detectron.infer.Detection.keypoints', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cls', full_name='detectron.infer.Detection.cls', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=788,
  serialized_end=966,
)


_DETECTRESPONSE = _descriptor.Descriptor(
  name='DetectResponse',
  full_name='detectron.infer.DetectResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='context', full_name='detectron.infer.DetectResponse.context', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='err_no', full_name='detectron.infer.DetectResponse.err_no', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='err_msg', full_name='detectron.infer.DetectResponse.err_msg', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='request_id', full_name='detectron.infer.DetectResponse.request_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='detections', full_name='detectron.infer.DetectResponse.detections', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='err_no_oneof', full_name='detectron.infer.DetectResponse.err_no_oneof',
      index=0, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='err_msg_oneof', full_name='detectron.infer.DetectResponse.err_msg_oneof',
      index=1, containing_type=None, fields=[]),
  ],
  serialized_start=969,
  serialized_end=1166,
)

_CONTEXT_USERDATAENTRY.containing_type = _CONTEXT
_CONTEXT_OPTIONPARAMSENTRY.containing_type = _CONTEXT
_CONTEXT.fields_by_name['user_data'].message_type = _CONTEXT_USERDATAENTRY
_CONTEXT.fields_by_name['option_params'].message_type = _CONTEXT_OPTIONPARAMSENTRY
_DETECTREQUEST.fields_by_name['context'].message_type = _CONTEXT
_DETECTREQUEST.fields_by_name['data'].message_type = _REQUESTDATA
_BBOX.fields_by_name['left_top'].message_type = _POINT
_BBOX.fields_by_name['right_bottom'].message_type = _POINT
_MASK.fields_by_name['segms'].message_type = _POINT
_KEYPOINTS.fields_by_name['points'].message_type = _POINT
_DETECTION.fields_by_name['bbox'].message_type = _BBOX
_DETECTION.fields_by_name['mask'].message_type = _MASK
_DETECTION.fields_by_name['keypoints'].message_type = _KEYPOINTS
_DETECTION.fields_by_name['cls'].message_type = _CLASSIFICATION
_DETECTRESPONSE.fields_by_name['context'].message_type = _CONTEXT
_DETECTRESPONSE.fields_by_name['detections'].message_type = _DETECTION
_DETECTRESPONSE.oneofs_by_name['err_no_oneof'].fields.append(
  _DETECTRESPONSE.fields_by_name['err_no'])
_DETECTRESPONSE.fields_by_name['err_no'].containing_oneof = _DETECTRESPONSE.oneofs_by_name['err_no_oneof']
_DETECTRESPONSE.oneofs_by_name['err_msg_oneof'].fields.append(
  _DETECTRESPONSE.fields_by_name['err_msg'])
_DETECTRESPONSE.fields_by_name['err_msg'].containing_oneof = _DETECTRESPONSE.oneofs_by_name['err_msg_oneof']
DESCRIPTOR.message_types_by_name['Point'] = _POINT
DESCRIPTOR.message_types_by_name['Context'] = _CONTEXT
DESCRIPTOR.message_types_by_name['Classification'] = _CLASSIFICATION
DESCRIPTOR.message_types_by_name['RequestData'] = _REQUESTDATA
DESCRIPTOR.message_types_by_name['DetectRequest'] = _DETECTREQUEST
DESCRIPTOR.message_types_by_name['BBox'] = _BBOX
DESCRIPTOR.message_types_by_name['Mask'] = _MASK
DESCRIPTOR.message_types_by_name['KeyPoints'] = _KEYPOINTS
DESCRIPTOR.message_types_by_name['Detection'] = _DETECTION
DESCRIPTOR.message_types_by_name['DetectResponse'] = _DETECTRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Point = _reflection.GeneratedProtocolMessageType('Point', (_message.Message,), dict(
  DESCRIPTOR = _POINT,
  __module__ = 'infer_server_pb2'
  # @@protoc_insertion_point(class_scope:detectron.infer.Point)
  ))
_sym_db.RegisterMessage(Point)

Context = _reflection.GeneratedProtocolMessageType('Context', (_message.Message,), dict(

  UserDataEntry = _reflection.GeneratedProtocolMessageType('UserDataEntry', (_message.Message,), dict(
    DESCRIPTOR = _CONTEXT_USERDATAENTRY,
    __module__ = 'infer_server_pb2'
    # @@protoc_insertion_point(class_scope:detectron.infer.Context.UserDataEntry)
    ))
  ,

  OptionParamsEntry = _reflection.GeneratedProtocolMessageType('OptionParamsEntry', (_message.Message,), dict(
    DESCRIPTOR = _CONTEXT_OPTIONPARAMSENTRY,
    __module__ = 'infer_server_pb2'
    # @@protoc_insertion_point(class_scope:detectron.infer.Context.OptionParamsEntry)
    ))
  ,
  DESCRIPTOR = _CONTEXT,
  __module__ = 'infer_server_pb2'
  # @@protoc_insertion_point(class_scope:detectron.infer.Context)
  ))
_sym_db.RegisterMessage(Context)
_sym_db.RegisterMessage(Context.UserDataEntry)
_sym_db.RegisterMessage(Context.OptionParamsEntry)

Classification = _reflection.GeneratedProtocolMessageType('Classification', (_message.Message,), dict(
  DESCRIPTOR = _CLASSIFICATION,
  __module__ = 'infer_server_pb2'
  # @@protoc_insertion_point(class_scope:detectron.infer.Classification)
  ))
_sym_db.RegisterMessage(Classification)

RequestData = _reflection.GeneratedProtocolMessageType('RequestData', (_message.Message,), dict(
  DESCRIPTOR = _REQUESTDATA,
  __module__ = 'infer_server_pb2'
  # @@protoc_insertion_point(class_scope:detectron.infer.RequestData)
  ))
_sym_db.RegisterMessage(RequestData)

DetectRequest = _reflection.GeneratedProtocolMessageType('DetectRequest', (_message.Message,), dict(
  DESCRIPTOR = _DETECTREQUEST,
  __module__ = 'infer_server_pb2'
  # @@protoc_insertion_point(class_scope:detectron.infer.DetectRequest)
  ))
_sym_db.RegisterMessage(DetectRequest)

BBox = _reflection.GeneratedProtocolMessageType('BBox', (_message.Message,), dict(
  DESCRIPTOR = _BBOX,
  __module__ = 'infer_server_pb2'
  # @@protoc_insertion_point(class_scope:detectron.infer.BBox)
  ))
_sym_db.RegisterMessage(BBox)

Mask = _reflection.GeneratedProtocolMessageType('Mask', (_message.Message,), dict(
  DESCRIPTOR = _MASK,
  __module__ = 'infer_server_pb2'
  # @@protoc_insertion_point(class_scope:detectron.infer.Mask)
  ))
_sym_db.RegisterMessage(Mask)

KeyPoints = _reflection.GeneratedProtocolMessageType('KeyPoints', (_message.Message,), dict(
  DESCRIPTOR = _KEYPOINTS,
  __module__ = 'infer_server_pb2'
  # @@protoc_insertion_point(class_scope:detectron.infer.KeyPoints)
  ))
_sym_db.RegisterMessage(KeyPoints)

Detection = _reflection.GeneratedProtocolMessageType('Detection', (_message.Message,), dict(
  DESCRIPTOR = _DETECTION,
  __module__ = 'infer_server_pb2'
  # @@protoc_insertion_point(class_scope:detectron.infer.Detection)
  ))
_sym_db.RegisterMessage(Detection)

DetectResponse = _reflection.GeneratedProtocolMessageType('DetectResponse', (_message.Message,), dict(
  DESCRIPTOR = _DETECTRESPONSE,
  __module__ = 'infer_server_pb2'
  # @@protoc_insertion_point(class_scope:detectron.infer.DetectResponse)
  ))
_sym_db.RegisterMessage(DetectResponse)


_CONTEXT_USERDATAENTRY.has_options = True
_CONTEXT_USERDATAENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_CONTEXT_OPTIONPARAMSENTRY.has_options = True
_CONTEXT_OPTIONPARAMSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))

_DETECTRONSERVICE = _descriptor.ServiceDescriptor(
  name='DetectronService',
  full_name='detectron.infer.DetectronService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=1168,
  serialized_end=1263,
  methods=[
  _descriptor.MethodDescriptor(
    name='Detect',
    full_name='detectron.infer.DetectronService.Detect',
    index=0,
    containing_service=None,
    input_type=_DETECTREQUEST,
    output_type=_DETECTRESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_DETECTRONSERVICE)

DESCRIPTOR.services_by_name['DetectronService'] = _DETECTRONSERVICE

# @@protoc_insertion_point(module_scope)
